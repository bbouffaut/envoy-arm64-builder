services:
  envoy-builder:
    image: envoy-devcontainer
    container_name: envoy-builder
    platform: linux/arm64
    user: root
    cap_drop: [DAC_OVERRIDE]
    cap_add: [SYS_PTRACE, NET_RAW, NET_ADMIN]
    security_opt: [seccomp:unconfined]
    network_mode: host
    volumes:
      - .:/workspace
      - bazel-cache:/build/.cache/envoy-bazel
    working_dir: /workspace/envoy
    entrypoint: ["bash","-lc"]
    command:
      - |
        set -euo pipefail

        echo 'ðŸ‘· Checking for existing cache...'
        if [ -z "$$(ls -A /build/.cache/envoy-bazel 2>/dev/null || true)" ]; then
          echo 'ðŸ”§ No cache found, running Envoy setup...'
          .devcontainer/setup.sh
        else
          echo 'âœ… Bazel cache already exists, skipping setup.'
        fi

        echo 'ðŸ“‚ Fixing permissions on Bazel cache...' &&
        mkdir -p /build/.cache/envoy-bazel ;
        chown vscode:vscode /build/.cache/envoy-bazel &&

        echo 'ðŸ“‚ Fixing permissions on workspace...'
        chown -R vscode:vscode /workspace

        echo 'ðŸ‘¤ Switching to vscode user...' &&
        exec sudo -u vscode bash -lc '
          set -euo pipefail
          export XDG_CACHE_HOME=/build/.cache/envoy-bazel
          export BAZEL_BUILD_EXTRA_OPTIONS="--define tcmalloc=gperftools"

          cd /workspace/envoy
          ./ci/do_ci.sh release.server_only

          echo "ðŸ“‚ Copying binary to workspace/bin directory..."
          mkdir -p /workspace/bin
          chown vscode:vscode /workspace/bin
          cp /build/.cache/envoy-bazel/envoy/arm64/bin/release.tar.zst /workspace/bin/

          echo "âœ… Envoy build completed!"
        '

volumes:
  bazel-cache:
